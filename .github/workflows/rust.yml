name: Rust

on:
  push:
    branches: [ "main" ]
    tags: v*
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./cli

    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  release-create:

    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - run: gh release create ${{ github.ref_name }} --generate-notes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-upload:

    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: release-create
    runs-on: ${{ matrix.os }}

    permissions:
      contents: write

    defaults:
      run:
        working-directory: ./cli

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            ext: ""
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            ext: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: .exe
          - os: macos-latest
            target: aarch64-apple-darwin
            ext: ""
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: ""

    steps:
    - uses: actions/checkout@v4
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        target: ${{ matrix.target }}
    - run: cargo build --release --target ${{ matrix.target }}
    - run: gh release upload ${{ github.ref_name }} ./target/${{ matrix.target }}/release/cli${{ matrix.ext }}#aibranch-${{ matrix.target }}${{ matrix.ext }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
